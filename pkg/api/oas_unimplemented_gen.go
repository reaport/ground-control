// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AirplaneGetParkingSpot implements airplane_getParkingSpot operation.
//
// В зависимости от загрузки парковок отдает нужный узел.
//
// GET /airplane/{id}/parking
func (UnimplementedHandler) AirplaneGetParkingSpot(ctx context.Context, params AirplaneGetParkingSpotParams) (r AirplaneGetParkingSpotRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MapGetAirportMap implements map_getAirportMap operation.
//
// Возвращает полную карту аэропорта в виде графа.
//
// GET /map
func (UnimplementedHandler) MapGetAirportMap(ctx context.Context) (r *AirportMap, _ error) {
	return r, ht.ErrNotImplemented
}

// MapRefreshAirportMap implements map_refreshAirportMap operation.
//
// Возвращает карту к исходному состоянию.
//
// POST /map/refresh
func (UnimplementedHandler) MapRefreshAirportMap(ctx context.Context) error {
	return ht.ErrNotImplemented
}

// MapUpdateAirportMap implements map_updateAirportMap operation.
//
// Обновляет карту аэропорта.
//
// PUT /map
func (UnimplementedHandler) MapUpdateAirportMap(ctx context.Context, req *AirportMap) (r MapUpdateAirportMapRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MovingGetRoute implements moving_getRoute operation.
//
// Запрашивает маршрут из точки А в точку Б.
//
// POST /route
func (UnimplementedHandler) MovingGetRoute(ctx context.Context, req *MovingGetRouteReq) (r MovingGetRouteRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MovingNotifyArrival implements moving_notifyArrival operation.
//
// Уведомляет вышку о прибытии транспорта в узел.
//
// POST /arrived
func (UnimplementedHandler) MovingNotifyArrival(ctx context.Context, req *MovingNotifyArrivalReq) (r MovingNotifyArrivalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MovingRegisterVehicle implements moving_registerVehicle operation.
//
// В зависимости от типа транспорта отдает нужную
// начальную точку и id.
//
// POST /register-vehicle/{type}
func (UnimplementedHandler) MovingRegisterVehicle(ctx context.Context, params MovingRegisterVehicleParams) (r MovingRegisterVehicleRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MovingRequestMove implements moving_requestMove operation.
//
// Запрашивает разрешение на перемещение из одного узла
// в другой.
//
// POST /move
func (UnimplementedHandler) MovingRequestMove(ctx context.Context, req *MovingRequestMoveReq) (r MovingRequestMoveRes, _ error) {
	return r, ht.ErrNotImplemented
}
